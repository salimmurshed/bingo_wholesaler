import com.android.build.gradle.internal.tasks.FinalizeBundleTask
plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

//def flutterRoot = localProperties.getProperty('flutter.sdk')
//if (flutterRoot == null) {
//    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
//}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

//apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
//apply plugin: 'com.android.application'
//apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.crashlytics'
//apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"


def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
android {
    compileSdkVersion 34
    ndkVersion "24.0.8215888"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.bingo.dev"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled = true
        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a'
    }
    signingConfigs {

        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            signingConfig signingConfigs.release
        }
    }
//    splits {
//        abi {
//            enable true
//            reset()
//            include 'arm64-v8a', 'x86', 'x86_64'
//            universalApk false
//        }
//    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def architecture = output.getFilter(com.android.build.OutputFile.ABI)
            def newName
            newName = "${new Date().format('yyyymmddhhmm')}_Bingo_${variant.getFlavorName().capitalize()}-${variant.buildType.name}_V${versionName}(${versionCode})-${architecture}.apk"

            outputFileName = newName
        }


        tasks.named("sign${variant.name.capitalize()}Bundle", FinalizeBundleTask) {
            File file = finalBundleFile.asFile.get()
            File finalFile = new File(file.parentFile, "${new Date().format('yyyymmddhhmm')}_Bingo_${variant.getFlavorName().capitalize()}-${variant.buildType.name}_V${versionName}(${versionCode}).aab")
            finalBundleFile.set(finalFile)
        }
    }
    flavorDimensions "bingo"
    productFlavors {
        dev {
            dimension "bingo"
            applicationId "com.bingo.dev"
            resValue "string", "app_name", "Bingo Dev"
            versionNameSuffix ".dev"
        }
        prod {
            dimension "bingo"
            applicationId "com.app.bingosolution"
            resValue "string", "app_name", "Bingo"
            versionNameSuffix ".prod"
        }
        qa {
            dimension "bingo"
            applicationId "com.bingo.qa"
            resValue "string", "app_name", "Bingo QA"
            versionNameSuffix ".qa"

        }
    }

}

flutter {
    flutter.target "lib/main_prod.dart"
    source '../..'
}
dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "com.google.android.gms:play-services-location:21.0.1"
    implementation "com.google.android.gms:play-services-wearable:18.1.0"
    implementation "com.google.android.gms:play-services-analytics:18.0.3"
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    implementation platform('com.google.firebase:firebase-bom:31.2.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.mlkit:barcode-scanning:17.2.0'
    implementation 'com.google.android.gms:play-services-mlkit-barcode-scanning:18.3.0'
}