name: "IOS Development Release IPA"

on:
  push: # Set Push Request Branch
    branches:
      - develop

jobs:
  IOS-Build:
    name: IOS Development Release IPA
    runs-on: macos-latest # Set OS Platform for the build
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      # Send message to Slack for Starting status:
      - name: Slack start job notify
        uses: act10ns/slack@v1
        with:
          status: starting
          config: .github/slack.yml
        if: always()

      # Set Ceheckout Action
      - name: Checkout Action
        uses: actions/checkout@v3

      # Install Development Certificate for X-Code
      - name: Install Xcode Development Certificate (IOS)
        uses: apple-actions/import-codesign-certs@v1
        with:
          # Secret is in base64 format
          p12-file-base64: ${{ secrets.DEVELOPMENT_CERIFICATE_P12 }}
          p12-password: ${{ secrets.DEVELOPMENT_CERTI_PASS_P12 }}

      # Install Package Provisional Certificate
      - name: Install Development Profile (IOS-App_ID)
        env:
          DEV_APPID_PROFILE_CERTIFICATE_BASE64: ${{ secrets.DEV_APPID_PROFILE_CERTIFICATE }}
        run: |
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          echo -n "$DEV_APPID_PROFILE_CERTIFICATE_BASE64" | base64 --decode --output $PP_PATH
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles 

      # Set-up Flutter for run the code
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.10'
          channel: 'stable'

      # Get Packages
      - name: Pub Get
        run: flutter pub get

      # Fire command for Ios build
      - name: Development IOS Build
        run: |
          flutter build ios --release -t lib/main_dev.dart --flavor=dev

      # Swift dependency command for X-Code
      - name: Build resolve Swift dependencies
        run: xcodebuild -resolvePackageDependencies -workspace ios/Runner.xcworkspace -scheme dev -configuration Release-dev

      # Build Ios Archive File
      - name: Build Archive
        run: |
          xcodebuild -workspace ios/Runner.xcworkspace -scheme dev -configuration Release-dev DEVELOPMENT_TEAM=Clockwise Development LTD (63MX6YV7DM)  -sdk 'iphoneos' -destination 'generic/platform=iOS' -archivePath build-output/app.xcarchive PROVISIONING_PROFILE=fe94c7ae-26b2-40fc-90b8-f861ba8e7343 clean archive CODE_SIGN_IDENTITY="Apple Development: Monali Patel (48NX772485)"

      # Export .ipa form Archive file
      - name: Export ipa
        run: xcodebuild -exportArchive -archivePath build-output/app.xcarchive -exportPath build-output/ios -exportOptionsPlist ios/Runner/ExportOptions.plist

      # Upload Ios Artifact 1
      - name: Upload IOS Artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          name: IOS Build Artifact
          path: build-output/ios/bingo_wholesale.ipa

      # Upload Ios Development Artifact on slack
      - name: Upload to slack step
        uses: MeilCli/slack-upload-file@v1
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channels: ${{ secrets.SLACK_CHANNEL }}
          file_path: '/Users/runner/work/Flutter-Bingo/Flutter-Bingo/build-output/ios/bingo_wholesale.ipa'
          file_name: 'bingo_wholesale.ipa'
          file_type: 'ipa'
          retries: 0
          initial_comment: '*_Bingo IOS Development Ipa_* :hello_apple:'
        continue-on-error: true
        if: always()

      # Send message to Slack final Status:
      - name: Slack job status notify
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          config: .github/slack.yml
        if: always()
